#WSL2 - Windows subsystem linux versão 2

#Suporte a docker, kubernetes e ao padrão de containers

#Requisitos:
-windows 10 pro ou home (melhor o pro) 
-windows 10 versão >= 19.03
-memória ram suficiente (8gb ram)
-virtual machine  plataform habilitado



#Habilitar o wsl no windows
- Execute os seguintes comandos no PowerShell em modo administrador:

dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart
dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart

- Reiniciar o PC

#Atualizar o wsl para versão 2
- Execute os seguintes comandos no PowerShell em modo administrador:

wsl.exe --update
wsl --set-default-version 2

#Instalar o linux
- instalar linux ubuntu pela windows store (NÃO!!!!!!! abrir pela windows store)
- Após concluir o download e instalação.. menu iniciar > pesquisar por ubuntu > executar ubuntu como administrador
- definir usuário e a senha (armazenar em algum local ..txt .. email .. etc)



#Instalar windows terminal pela windows store

- Alterar para abrir no ubuntu por padrão (caso queira)
- alterar as do windows terminal configs > "abrir json"

                "guid": "{2c4de342-38b7-51cf-b940-2309a097f518}",
                "hidden": false,
                "name": "Ubuntu",
                "source": "Windows.Terminal.Wsl",
                "startingDirectory": "\\\\wsl$\\Ubuntu\\home\\NOME_DO_USUARIO\\"     <===== add/mudar essa linha


#Configurar recursos do wsl2

- Criar arquivo  .wslconfig na raiz da sua pasta de usuário (C:\Users\<seu_usuario>):

[wsl2]
memory=4GB
processors=4
swap=2GB

- As configurações podem ser ajustadas conforme a capacidade da sua máquina
- Após criar o arquivo fechar o terminal do ubuntu .. e no windows PowerShell em modo administrador executar:

wsl --shutdown      <=====  isso finaliza o linux

#instalar o docker no ubuntu


- Reabrir o terminal
- Sempre que reabrir o terminal digite: sudo ls
- informe a senha .. assim você estará em modo administrativo. (Sempre fazer isso)

- Comandos para instalar o docker no ubuntu (algum tem mais de uma linha. Copiar e colar no windows terminal)
- Alguns pedem para digitar "Y" .. digite e de enter 

sudo apt update && sudo apt upgrade

sudo apt remove docker docker-engine docker.io containerd runc

sudo apt-get install \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg \
    lsb-release

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
echo \
  "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  
<enter>  

sudo apt-get update

sudo apt-get install docker-ce docker-ce-cli containerd.io

sudo usermod -aG docker $USER

sudo curl -L "https://github.com/docker/compose/releases/download/1.29.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose

sudo chmod +x /usr/local/bin/docker-compose

sudo service docker start


#instalar o node no wsl2

curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash

- reiniciar o terminal (sudo ls ao abrir!!!)

nvm install --lts

#Instalar o yarn 

npm install yarn -g

- Caso apareça algum aviso de: 
npm notice New minor version of npm available! 8.11.0 -> 8.13.1
npm notice Changelog: https://github.com/npm/cli/releases/tag/v8.13.1
npm notice Run npm install -g npm@8.13.1 to update!

Atualize o npm seguindo o comando retornado, nesse caso: 
npm install -g npm@8.13.1


#Abrir pasta referente ao wsl2 no windows explorer
- dentro do terminal do wsl2:
explorer.exe .


#Sempre que rodar o linux a primeira vez 
rodar o comando sudo ls( senha )
sudo service docker start






--- configurar o vscode ----

Adicionar a extensão wsl
